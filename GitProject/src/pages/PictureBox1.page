<apex:page standardStylesheets="false">
  <html><head><meta charset="utf-8"></meta><title>
      Canvas | Drawing Board
    </title><style type="text/css">
   
      #container { position: relative; }
      #imageView { border: 1px solid #000; }
    
      

    </style><script type="text/javascript">
      

  // Keep everything in anonymous function, called on window load.

  if(window.addEventListener) {
  window.addEventListener('load', function () {
  var canvas, context, tool;

  function init () {
    // Find the canvas element.
    canvas = document.getElementById('imageView');
    context = canvas.getContext('2d');

    // Pencil tool instance.
    tool = new tool_pencil();

    // Attach the mousedown, mousemove and mouseup event listeners.
    canvas.addEventListener('mousedown', ev_canvas, false);
    canvas.addEventListener('mousemove', ev_canvas, false);
    canvas.addEventListener('mouseup',   ev_canvas, false);
  }

  // This painting tool works like a drawing pencil which tracks the mouse 
  // movements.
  function tool_pencil () {
    var tool = this;
    this.started = false;

    // This is called when you start holding down the mouse button.
    // This starts the pencil drawing.
    this.mousedown = function (ev) {
        context.beginPath();
        context.moveTo(ev._x, ev._y);
        tool.started = true;
    };

    // This function is called every time you move the mouse. Obviously, it only 
    // draws if the tool.started state is set to true (when you are holding down 
    // the mouse button).
    this.mousemove = function (ev) {
      if (tool.started) {
        context.lineTo(ev._x, ev._y);
        context.stroke();
      }
    };

    // This is called when you release the mouse button.
    this.mouseup = function (ev) {
      if (tool.started) {
        tool.mousemove(ev);
        tool.started = false;
      }
    };
  }

  // The general-purpose event handler. This function just determines the mouse 
  // position relative to the canvas element.
  function ev_canvas (ev) {
    if (ev.layerX || ev.layerX == 0) { // Firefox
      ev._x = ev.layerX;
      ev._y = ev.layerY;
    } else if (ev.offsetX || ev.offsetX == 0) { // Opera
      ev._x = ev.offsetX;
      ev._y = ev.offsetY;
    }

    // Call the event handler of the tool.
    var func = tool[ev.type];
    if (func) {
      func(ev);
    }
  }

  init();

}, false); }


    </script></head><body>
      
    Hold down the mouse button to draw in the rectangle below.
    <br></br><div id="container"><canvas id="imageView" height="200" width="200" ></canvas></div>
      
      <script type="text/javascript">
    
    
      
var gaJsHost = (("https:" == document.location.protocol) ? "https://ssl." : "http://www.");
document.write(unescape("%3Cscript src='" + gaJsHost + "google-analytics.com/ga.js' type='text/javascript'%3E%3C/script%3E"));

    </script><script type="text/javascript" src="http://www.google-analytics.com/ga.js"></script><script type="text/javascript">
      
try {
var pageTracker = _gat._getTracker("UA-9823831-1");
pageTracker._trackPageview();
} catch(err) {}

function copySign()
{
var c=document.getElementById("imageView");
var ctx=c.getContext("2d");
 alert(ctx);
//var sign= document.getElementById("imageView");

// var imageData = imageView.getImageData(0, 0, imageView.width, imageView.height);
// alert(imageData);
 // var data = imageData.data;
 
  // modify image data

  // draw result back onto the canvas
  imageData.putImageData(imageData,20, 0);
}

    </script></body></html>
  

    <button onclick="copySign()">Click Me!</button>
 <!-- <apex:pageBlock >
      <apex:pageBlockSection >
          <apex:pageBlockSectionItem >
              <apex:inputTextarea rows="5" cols="5"/>
          </apex:pageBlockSectionItem>
      </apex:pageBlockSection>
  </apex:pageBlock> -->

    
</apex:page>